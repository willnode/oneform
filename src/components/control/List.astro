---
const { parentID, control, value } = Astro.props;
import Control from "./Control.astro";
let id = parentID ? `${parentID}.${control.id}` : control.id;
---

<div class="card oneform-list" id={id}>
	<div class="card-body">
		<h5 class="card-title d-flex">
			<span class="flex-grow-1">{control.label}</span>
			<button
				type="button"
				class="btn btn-success"
				onclick="appendItem(this)">Add</button
			>
		</h5>
		<hr />
		<fieldset disabled class="d-none">
			<div
				class="oneform-list-item oneform-list-proto"
				data-list-parent={id}
			>
				<div class="d-flex align-items-center">
					<div class="flex-grow-1">
						<Control
							parentID={`${id}.[]`}
							control={control.child}
							value={{}}
						/>
					</div>
					<div class="ms-2 d-flex flex-column">
						<button
							type="button"
							onclick="deleteItem(this)"
							class="btn btn-sm btn-danger">🗑️</button
						>
					</div>
				</div>
				<hr />
			</div>
		</fieldset>
		<div class="oneform-list-entries" data-list-parent={id}>
			{
				value?.[control.id]?.map((v: any, i: number) => (
					<div
						data-list-parent={id}
						data-index={i}
						class="oneform-list-item"
					>
						<div class="d-flex align-items-center">
							<div class="flex-grow-1">
								<Control
									parentID={`${id}.${i}`}
									control={control.child}
									value={v}
								/>
							</div>
							<div class="ms-2 d-flex flex-column">
								<button
									type="button"
									onclick="deleteItem(this)"
									class="btn btn-sm btn-danger"
								>
									🗑️
								</button>
							</div>
						</div>
						<hr />
					</div>
				))
			}
		</div>
	</div>
</div>
