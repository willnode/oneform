---
import { Form, Hook, db, eq, and } from "astro:db";
import Layout from "@/layouts/Layout.astro";
import { getTeam } from "@/components/model";
import { backToLogin, notFound } from "@/components/helper";
import { desc } from "astro:db";
import FormNavbar from "@/components/editor/FormNavbar.tsx";
const team = await getTeam(Astro.request);
if (!team) {
  return backToLogin();
}

const { form: formId } = Astro.params;

const teamId = await getTeam(Astro.request);
if (!teamId) {
  return backToLogin();
}

if (!formId) {
  return notFound();
}

const formList = await db
  .select({
    id: Form.id,
    created: Form.created,
  })
  .from(Form)
  .where(and(eq(Form.id, formId), eq(Form.teamId, teamId)))
  .orderBy(desc(Form.id));
if (formList.length === 0) {
  return notFound();
}

if (Astro.request.method === "DELETE") {
  await db.delete(Hook).where(eq(Hook.formId, formId));
  return "";
}

const hookList = await db.select().from(Hook).where(eq(Hook.formId, formId));
---

<Layout title="Hooks">
  <div class="container my-5" style="max-width: 800px;">
    <FormNavbar page="hooks"/>
    <div class="container my-5">
      <div class="my-3">
      </div>
      <div class="list-group">
        {
          hookList.map((hook) => (
            <a
              href={`/hook/${hook.id}/view`}
              class="list-group-item list-group-item-action"
            >
              {hook.title}
            </a>
          ))
        }
      </div>
    </div>
  </div>
</Layout>
