---
import { Form, Entry, db, eq, and, Hook } from "astro:db";
import Layout from "@/layouts/Layout.astro";
import { backToLogin, notFound } from "@/components/helper";
import FormNavbar from "@/components/editor/FormNavbar.tsx";
import query from "@/lib/query";
import FormEntries from "./_entries";
import { getTeam } from "@/lib/auth";

const team = await getTeam(Astro.request);
if (!team) {
  return backToLogin();
}

const { form: formId } = Astro.params;

const teamId = await getTeam(Astro.request);
if (!teamId) {
  return backToLogin();
}

if (!formId) {
  return notFound();
}

const form = await query.getFormById(formId);
if (!form || form.teamId != teamId) {
  return notFound();
}

if (Astro.request.method === "DELETE") {
  await db.delete(Entry).where(eq(Entry.formId, formId));
  return "";
}

const entryList = await db.select().from(Entry).where(eq(Entry.formId, formId));
---

<Layout title="Entries.">
  <FormNavbar page="entries" />
  <FormEntries list={entryList} />
</Layout>
