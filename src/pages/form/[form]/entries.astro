---
import { Form, Entry, db, eq, and, Hook } from "astro:db";
import Layout from "@/layouts/Layout.astro";
import { getTeam } from "@/components/model";
import { backToLogin, notFound } from "@/components/helper";
import FormNavbar from "@/components/editor/FormNavbar.tsx";
import * as query from "@/api/query";

const team = await getTeam(Astro.request);
if (!team) {
  return backToLogin();
}

const { form: formId } = Astro.params;

const teamId = await getTeam(Astro.request);
if (!teamId) {
  return backToLogin();
}

if (!formId) {
  return notFound();
}

const form = await query.getFormById(formId);
if (!form || form.teamId != teamId) {
  return notFound();
}

if (Astro.request.method === "DELETE") {
  await db.delete(Entry).where(eq(Entry.formId, formId));
  return "";
}

const entryList = await db.select().from(Entry).where(eq(Entry.formId, formId));
---

<Layout title="Entries.">
  <div class="container my-5" style="max-width: 800px;">
    <FormNavbar page="entries" />
    <div class="container my-5">
      <div class="my-3">
        <a class="btn btn-success" href="./export/csv" download>
          Download CSV
        </a>
      </div>
      <div class="list-group">
        {
          entryList.map((entry) => (
            <a
              href={`/entry/${entry.id}/view`}
              class="list-group-item list-group-item-action"
            >
              {entry.created}
            </a>
          ))
        }
      </div>
    </div>
  </div>
</Layout>
