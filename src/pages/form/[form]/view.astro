---
import Layout from "@/layouts/Layout.astro";

const { form: formId } = Astro.params;

import { Form, Entry, db, eq } from "astro:db";
import { ulid } from "ulid";
import { backToLogin, notFound } from "@/components/helper";
import { getTeam, handleFormUpload } from "@/components/model";
import FormNavbar from "@/components/editor/FormNavbar.tsx";
import { FormControl } from "@/components/control/FormControl";
import ViewForm from "./_view.tsx";
import * as query from "@/api/query";

if (!formId) {
  return notFound();
}

const teamId = await getTeam(Astro.request);

const form = await query.getFormById(formId);
if (!form) {
  return notFound();
}

if (form.privilenge !== "public") {
  if (teamId && form.teamId != teamId) {
    return notFound();
  } else {
    return backToLogin();
  }
}

if (Astro.request.method === "POST") {
  const data: any = await handleFormUpload(Astro.request, formId, form.teamId);
  const id = ulid();
  await db.insert(Entry).values({
    formId,
    data,
    id,
  });

  return new Response("", {
    status: 302,
    headers: {
      location: `/form/${formId}/posted`,
    },
  });
}
---

<Layout title="View Form">
  {teamId && <FormNavbar page="view" />}
  <div class="my-5">
    <h1 class="text-2xl mb-5">{form.title}</h1>
    <ViewForm client:load schema={form.schema} value={{}} />
  </div>
</Layout>
