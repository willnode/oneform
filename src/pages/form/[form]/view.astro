---
import Layout from "@/layouts/Layout.astro";

const { form: formId } = Astro.params;

import { Form, Entry, db, eq } from "astro:db";
import { ulid } from "ulid";
import { backToLogin, notFound } from "@/components/helper";
import { handleFormUpload } from "@/components/model";
import FormNavbar from "@/components/editor/FormNavbar.tsx";
import { FormControl } from "@/components/control/FormControl";
import ViewForm from "./_view.tsx";

if (!formId) {
  return notFound();
}

const formList = await db.select().from(Form).where(eq(Form.id, formId));
if (formList.length === 0) {
  return notFound();
}

const form = formList[0];
// const teamId = await getTeam(Astro.request);

if (form.privilenge !== "public") {
  return backToLogin();
}

if (Astro.request.method === "POST") {
  const data: any = await handleFormUpload(Astro.request, formId, form.teamId);
  const id = ulid();
  await db.insert(Entry).values({
    formId,
    data,
    id,
  });

  return new Response("", {
    status: 302,
    headers: {
      location: `/form/${formId}/posted`,
    },
  });
}
---

<Layout title="View Form">
  <div class="container my-5" style="max-width: 800px;">
    <FormNavbar page="view" />
    <h1 class="display-4">{form.title}</h1>
    <ViewForm client:load schema={form.schema} value={{}} />
  </div>
</Layout>
