---
import Layout from "../../../../../layouts/Layout.astro";
import FormScript from "@components/editor/FormScript.astro";

const { entry: entryID, format: formatId } = Astro.params;

import { Form, Entry, db, eq, Hook } from "astro:db";
import Group from "../../../../../components/control/Group.astro";
import { notFound } from "../../../../../helper";
import { Format } from "astro:db";
import { generate } from "@components/format/json";
if (!entryID || !formatId) {
  return notFound();
}

const entryList = await db.select().from(Entry).where(eq(Entry.id, entryID));
if (entryList.length === 0) {
  return notFound();
}
const entry = entryList[0];

const formList = await db.select().from(Form).where(eq(Form.id, entry.formId));
if (formList.length === 0) {
  return notFound();
}
const form = formList[0];

const formatList = await db
  .select()
  .from(Format)
  .where(eq(Format.id, formatId));
if (formatList.length === 0) {
  return notFound();
}
const format = formatList[0];
---

<Layout title="View Form">
  <div class="container my-5" style="max-width: 800px;">
    <a class="btn btn-warning" href=`/entry/${entry.id}/view`>
      Back to Entry
    </a>
    <a class="btn btn-secondary" href=`/format/${format.id}/entry/${entry.id}`>
      Open Raw
    </a>
    <code class="text-wrap">
      <pre set:text={generate(form, format, entry)} />
    </code>
  </div>
</Layout>

<FormScript />
